[
    {
        "id": "ae504a8ef127642b",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9e626f8b528b7958",
        "type": "tab",
        "label": "Control Valve",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "39f99e4a62f373c8",
        "type": "serial-port",
        "serialport": "/dev/serial0",
        "serialbaud": "1200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "2b56a08018ca8626",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Pond Controller",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "a2477e05a35a266b",
        "type": "ui_tab",
        "name": "Pond Controller",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b8db7c4fd954a85d",
        "type": "ui_group",
        "name": "Skimmer Control",
        "tab": "a2477e05a35a266b",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "68116819f71e2f5a",
        "type": "ui_group",
        "name": "",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cb99c239e3a46cec",
        "type": "ui_group",
        "name": "State",
        "tab": "a2477e05a35a266b",
        "order": 3,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6b421e0612d98b46",
        "type": "ui_spacer",
        "z": "ae504a8ef127642b",
        "name": "spacer",
        "group": "b8db7c4fd954a85d",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "a7a675d72c43bbef",
        "type": "ui_spacer",
        "z": "ae504a8ef127642b",
        "name": "spacer",
        "group": "b8db7c4fd954a85d",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "2ba920d95a269d02",
        "type": "ui_spacer",
        "z": "ae504a8ef127642b",
        "name": "spacer",
        "group": "b8db7c4fd954a85d",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "89684e45ee98076b",
        "type": "ui_spacer",
        "z": "ae504a8ef127642b",
        "name": "spacer",
        "group": "b8db7c4fd954a85d",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "6481acdb8cb17527",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "b15d7d7cabf89c55",
        "type": "ui_group",
        "name": "Raspberry Pi Control",
        "tab": "a2477e05a35a266b",
        "order": 2,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "361eed69e3ea83fd",
        "type": "inject",
        "z": "ae504a8ef127642b",
        "name": "Turn on Light",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "light.power",
        "payload": "enable",
        "payloadType": "str",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "756bc5ace9c187c4"
            ]
        ]
    },
    {
        "id": "572fc01dfa66c6a7",
        "type": "inject",
        "z": "ae504a8ef127642b",
        "name": "Turn off light",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "light.power",
        "payload": "disable",
        "payloadType": "str",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "756bc5ace9c187c4"
            ]
        ]
    },
    {
        "id": "bae3f7c54c109dc6",
        "type": "serial out",
        "z": "ae504a8ef127642b",
        "name": "",
        "serial": "39f99e4a62f373c8",
        "x": 810,
        "y": 440,
        "wires": []
    },
    {
        "id": "e709299f438e7fae",
        "type": "inject",
        "z": "ae504a8ef127642b",
        "name": "Send Flicker Msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"adr\":0,\"cmd\":\"F\",\"hue\":6,\"sat\":56,\"val\":32,\"par1\":0,\"par2\":0}",
        "payloadType": "json",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "59a5d73d4167b001"
            ]
        ]
    },
    {
        "id": "6eee368c7cb136b9",
        "type": "inject",
        "z": "ae504a8ef127642b",
        "name": "Send ConstantColor Msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"adr\":0,\"cmd\":\"C\",\"hue\":60,\"sat\":56,\"val\":16,\"par1\":0,\"par2\":0}",
        "payloadType": "json",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "59a5d73d4167b001"
            ]
        ]
    },
    {
        "id": "e70b3fddd692f003",
        "type": "function",
        "z": "ae504a8ef127642b",
        "name": "Make Light Event",
        "func": "\nfunction checksum(str) \n{\n    var sum = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        sum += str.charCodeAt(i);\n    }\n    return sum & 0x3f;\n}\n\nfunction toChar(i)\n{\n    return String.fromCharCode(0x30 + i);\n}\n\n// Construct string for computing checksum\nvar str =   \"(\" +\n            toChar(msg.payload.adr) + \n            msg.payload.cmd +\n            toChar(msg.payload.hue) +\n            toChar(msg.payload.sat) +\n            toChar(msg.payload.val) +\n            toChar(msg.payload.par1) +\n            toChar(msg.payload.par2) +\n            \"0\" +\n            \")\";\n            \nvar sum = checksum(str);\n\n// replace CRC char\nstr = str.substring(0, 8) + toChar(sum) + str.substring(9);\n\nnode.warn(\"**** str=\" + str);\n\nreturn { payload : str };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 440,
        "wires": [
            [
                "bae3f7c54c109dc6"
            ]
        ]
    },
    {
        "id": "a3cb5015c46a1627",
        "type": "inject",
        "z": "ae504a8ef127642b",
        "name": "Send Color Off Msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"adr\":0,\"cmd\":\"C\",\"hue\":60,\"sat\":7,\"val\":0,\"par1\":0,\"par2\":0}",
        "payloadType": "json",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "59a5d73d4167b001"
            ]
        ]
    },
    {
        "id": "8e733fa53b82fd33",
        "type": "link in",
        "z": "ae504a8ef127642b",
        "name": "",
        "links": [
            "d295f401330fd8bd",
            "59a5d73d4167b001"
        ],
        "x": 315,
        "y": 440,
        "wires": [
            [
                "e70b3fddd692f003"
            ]
        ]
    },
    {
        "id": "59a5d73d4167b001",
        "type": "link out",
        "z": "ae504a8ef127642b",
        "name": "",
        "mode": "link",
        "links": [
            "8e733fa53b82fd33"
        ],
        "x": 415,
        "y": 320,
        "wires": []
    },
    {
        "id": "4355d1422029c636",
        "type": "ui_button",
        "z": "ae504a8ef127642b",
        "name": "",
        "group": "b15d7d7cabf89c55",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Restart",
        "tooltip": "Restart Raspberry Pi",
        "color": "",
        "bgcolor": "#990000",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 820,
        "wires": [
            [
                "6671d25a8f9b59c9"
            ]
        ]
    },
    {
        "id": "97cc52f896f50d2e",
        "type": "ui_button",
        "z": "ae504a8ef127642b",
        "name": "",
        "group": "b15d7d7cabf89c55",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "Shutdown Raspberry Pi",
        "color": "",
        "bgcolor": "#990000",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "6b3dfa5f81fe6002"
            ]
        ]
    },
    {
        "id": "d7cd9379e5fc7217",
        "type": "ui_button",
        "z": "ae504a8ef127642b",
        "name": "",
        "group": "b8db7c4fd954a85d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Close",
        "tooltip": "Close the skimmer valve",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "close",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "ffe8f51e22baefd9"
            ]
        ]
    },
    {
        "id": "ffe8f51e22baefd9",
        "type": "link out",
        "z": "ae504a8ef127642b",
        "name": "Send Ctl Msg",
        "mode": "link",
        "links": [
            "5e68170bc315b36a"
        ],
        "x": 375,
        "y": 580,
        "wires": []
    },
    {
        "id": "8a5d8c9cd4c52561",
        "type": "ui_text",
        "z": "ae504a8ef127642b",
        "group": "cb99c239e3a46cec",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Skimmer Valve",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 660,
        "y": 580,
        "wires": []
    },
    {
        "id": "b6a180c721b67f53",
        "type": "ui_text",
        "z": "ae504a8ef127642b",
        "group": "cb99c239e3a46cec",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Raspberry Pi Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 690,
        "y": 760,
        "wires": []
    },
    {
        "id": "3073b80593562073",
        "type": "ui_button",
        "z": "ae504a8ef127642b",
        "name": "",
        "group": "b8db7c4fd954a85d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Open",
        "tooltip": "Open the skimmer valve",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "open",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 540,
        "wires": [
            [
                "ffe8f51e22baefd9"
            ]
        ]
    },
    {
        "id": "28e6e17712b48428",
        "type": "ui_button",
        "z": "ae504a8ef127642b",
        "name": "",
        "group": "b8db7c4fd954a85d",
        "order": 3,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Timed Close",
        "tooltip": "Close the skimmer valve for 15 minutes",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "timedclose",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 620,
        "wires": [
            [
                "ffe8f51e22baefd9"
            ]
        ]
    },
    {
        "id": "6b3dfa5f81fe6002",
        "type": "shutdown",
        "z": "ae504a8ef127642b",
        "name": "",
        "x": 360,
        "y": 760,
        "wires": []
    },
    {
        "id": "6671d25a8f9b59c9",
        "type": "restart",
        "z": "ae504a8ef127642b",
        "name": "",
        "x": 350,
        "y": 820,
        "wires": []
    },
    {
        "id": "e3fa1b794f2f6918",
        "type": "function",
        "z": "9e626f8b528b7958",
        "name": "Handle Buttons",
        "func": "if (msg.payload > 1.2 && msg.payload < 2.7) {\n    // Close valve button\n    return { \"payload\" : \"timedclose\" };\n}\n\nif (msg.payload < 4) {\n    // upper right button\n    return { \"payload\" : \"UpperRight\" };\n}\n\nif (msg.payload < 6) {\n    // lower right button\n    return { \"payload\" : \"LowerRight\" };\n}\n\nif (msg.payload < 9.2) {\n    // center button\n    return { \"payload\" : \"Center\" };\n}\n\nif (msg.payload < 10.8) {\n    // lower left button\n    return { \"payload\" : \"LowerLeft\" };\n}\n\nif (msg.payload < 11.8) {\n    // upper left button\n    return { \"payload\" : \"UpperLeft\" };\n}\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 280,
        "wires": [
            [
                "f96a7c0a0992d4cb"
            ]
        ]
    },
    {
        "id": "b118e96062651eda",
        "type": "trigger",
        "z": "9e626f8b528b7958",
        "name": "Run Valve Motor",
        "op1": "",
        "op2": "runmotordone",
        "op1type": "nul",
        "op2type": "str",
        "duration": "15",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 580,
        "y": 520,
        "wires": [
            [
                "45c785554f526de0"
            ]
        ]
    },
    {
        "id": "3ebc7f2e926afbb4",
        "type": "trigger",
        "z": "9e626f8b528b7958",
        "name": "Reopen Valve",
        "op1": "",
        "op2": "open",
        "op1type": "nul",
        "op2type": "str",
        "duration": "15",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "stop",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 840,
        "y": 400,
        "wires": [
            [
                "45c785554f526de0"
            ]
        ]
    },
    {
        "id": "45c785554f526de0",
        "type": "function",
        "z": "9e626f8b528b7958",
        "name": "Manage Valve",
        "func": "// This function receives messages to \"open\", \"close\"\n// and \"stop\" the valve motor\n\nfunction makeRelayMsg(enable, id)\n{\n    return { \"topic\" : \"relay.\" + id, \"payload\" : enable };\n}\n\n// Make a message to send multiple outputs. The first sends\n// 2 messages, one to each relay. The second sends a\n// message to trigger the timer that keeps the valve\n// motor running long enough to let it open or close.\n// The third sends a message to trigger the timer that\n// tells the valve when to reopen. All params are bool.\n// Since the timers trigger on any message \"msg\" is \n// sent when startMotor or startDelay are true and\n// \"null\" when false.\nfunction makeMsg(relay1, relay2, startMotor, startDelay, stopDelay)\n{\n    var delayPayload = null;\n    if (startDelay) {\n        delayPayload = msg;\n    } else if (stopDelay) {\n        delayPayload = { \"payload\" : \"stop\" };\n    }\n    \n    return [\n        [\n            makeRelayMsg(relay1, \"one\"),\n            makeRelayMsg(relay2, \"two\")\n        ],\n        delayPayload,\n        startMotor ? msg : null\n    ];\n}\n\nif (msg.payload == \"close\") {\n    return makeMsg(false, true, true, false, true);\n}\n\nif (msg.payload == \"timedclose\") {\n    return makeMsg(false, true, true, true, false);\n}\n\nif (msg.payload == \"open\") {\n    return makeMsg(true, false, true, false, true);\n}\n\nif (msg.payload == \"stop\") {\n    return makeMsg(false, false, false, false, true);\n}\n\nif (msg.payload == \"runmotordone\") {\n    return makeMsg(false, false, false, false, false);\n}\n\nreturn null;\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 400,
        "wires": [
            [
                "3f3ee6b11e05d312"
            ],
            [
                "3ebc7f2e926afbb4"
            ],
            [
                "b118e96062651eda"
            ]
        ]
    },
    {
        "id": "36261f6545949e4c",
        "type": "function",
        "z": "9e626f8b528b7958",
        "name": "Control Lights",
        "func": "function makeMsg()\n{\n    return {\n        \"topic\" : \"ControlLights\", \n        \"payload\" : payloads[currentPayload]\n    };\n}\n\nif (msg.payload == \"Center\") {\n    // Go to the next command\n    if (++currentPayload >= payloads.length) {\n        currentPayload = 0;\n    }\n} else {\n    return null\n}\n\nreturn makeMsg();\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Setup the payload\n\ncurrentPayload = 0;\n\npayloads = [\n    {\n        \"adr\":  0,\n        \"cmd\":  \"C\",\n        \"hue\":  0,\n        \"sat\":  0,\n        \"val\":  0,\n        \"par1\": 0,\n        \"par2\": 0\n    },\n    {\n        \"adr\":  0,\n        \"cmd\":  \"C\",\n        \"hue\":  60,\n        \"sat\":  56,\n        \"val\":  16,\n        \"par1\": 0,\n        \"par2\": 0\n    },\n    {\n        \"adr\":  0,\n        \"cmd\":  \"F\",\n        \"hue\":  6,\n        \"sat\":  56,\n        \"val\":  32,\n        \"par1\": 0,\n        \"par2\": 0\n    },\n    {\n        \"adr\":  0,\n        \"cmd\":  \"F\",\n        \"hue\":  60,\n        \"sat\":  56,\n        \"val\":  16,\n        \"par1\": 4,\n        \"par2\": 0\n    }\n];\n\n// Array entry for each command. Each entry is\n// an array with the currentParams for that command\n// of the form [ hue, sat, val, speed ]\nvar currentParams = [\n    // \"X\" - all lights off\n    [ 0, 0, 0, 0 ],\n    \n    // \"C\" - constant color\n    [ 60, 56, 16, 0],\n    \n    // \"F\" - flicker\n    [ 6, 56, 32, 0 ],\n    \n    // \"R\" - rainbow\n    [ 0, 0, 0, 0 ]\n];\n\n// Array entry for each command. each entry is\n// an array with the sequence of params to use\n// when the buttons are pressed\nvar paramSequence = [\n    // \"X\" - all lights off\n    [ 0, 0, 0, 0 ],\n    \n    // \"C\" - constant color\n    [ 60, 56, 16, 0],\n    \n    // \"F\" - flicker\n    [ 6, 56, 32, 0 ],\n    \n    // \"R\" - rainbow\n    [ 0, 0, 0, 0 ]\n];\n",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "d295f401330fd8bd"
            ]
        ]
    },
    {
        "id": "d295f401330fd8bd",
        "type": "link out",
        "z": "9e626f8b528b7958",
        "name": "",
        "mode": "link",
        "links": [
            "8e733fa53b82fd33"
        ],
        "x": 715,
        "y": 160,
        "wires": []
    },
    {
        "id": "5e68170bc315b36a",
        "type": "link in",
        "z": "9e626f8b528b7958",
        "name": "Receive Ctl Msg",
        "links": [
            "f96a7c0a0992d4cb",
            "ffe8f51e22baefd9"
        ],
        "x": 435,
        "y": 280,
        "wires": [
            [
                "36261f6545949e4c",
                "45c785554f526de0"
            ]
        ]
    },
    {
        "id": "f96a7c0a0992d4cb",
        "type": "link out",
        "z": "9e626f8b528b7958",
        "name": "Send Ctl Msg",
        "mode": "link",
        "links": [
            "5e68170bc315b36a"
        ],
        "x": 355,
        "y": 280,
        "wires": []
    },
    {
        "id": "2000c208b9a7eca7",
        "type": "inject",
        "z": "9e626f8b528b7958",
        "name": "Open Skimmer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "open",
        "payloadType": "str",
        "x": 200,
        "y": 360,
        "wires": [
            [
                "45c785554f526de0"
            ]
        ]
    },
    {
        "id": "e3ded562ba413ddd",
        "type": "inject",
        "z": "9e626f8b528b7958",
        "name": "Timer Close Skimmer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "timedclose",
        "payloadType": "str",
        "x": 220,
        "y": 480,
        "wires": [
            [
                "45c785554f526de0"
            ]
        ]
    },
    {
        "id": "f42d592f18820fad",
        "type": "inject",
        "z": "9e626f8b528b7958",
        "name": "Close Skimmer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "close",
        "payloadType": "str",
        "x": 200,
        "y": 420,
        "wires": [
            [
                "45c785554f526de0"
            ]
        ]
    },
    {
        "id": "55c9def2f8dba5d7",
        "type": "rpi-automation-hat in",
        "z": "9e626f8b528b7958",
        "name": "Buttons",
        "input": false,
        "analog": true,
        "threshold": "0.5",
        "adc4_threshold": "0.5",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "e3fa1b794f2f6918"
            ]
        ]
    },
    {
        "id": "756bc5ace9c187c4",
        "type": "rpi-automation-hat out",
        "z": "9e626f8b528b7958",
        "name": "",
        "x": 660,
        "y": 80,
        "wires": []
    },
    {
        "id": "3f3ee6b11e05d312",
        "type": "rpi-automation-hat out",
        "z": "9e626f8b528b7958",
        "name": "",
        "x": 840,
        "y": 300,
        "wires": []
    }
]